import { bot } from '../telegramBot/index.js';
import { validateMessage } from '../helpers/index.js';
import path from 'node:path';
import * as fs from 'node:fs';

export const sendMessageOnStart = async (chatId) => {
  await bot.sendMessage(chatId, '–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', {
    reply_markup: {
      inline_keyboard: [
        [{ text: '–ñ–∞–ª–æ–±–∞', callback_data: '/complaint' }],
        [{ text: '–ü–æ–∂–µ–ª–∞–Ω–∏–µ', callback_data: '/suggestion' }],
        [{ text: '–í–æ–ø—Ä–æ—Å –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É', callback_data: '/question' }]
      ]
    }
  });
};
export const sendMessageOnInfo = async (chatId) => {
  await bot.sendMessage(
    chatId,
    '–•–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è "ShelfNote", –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é' +
      ' –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É? –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –∏ –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Ö —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–ºüïµüèªüîé'
  );
};
export const sendMessageOnComplaint = async (chatId) => {
  await bot.sendMessage(
    chatId,
    '–û–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –∂–∞–ª–æ–±—É üòñ\n<b>–í–Ω–∏–º–∞–Ω–∏–µ: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–≤—ã–º —Å–ª–æ–≤–æ–º –≤–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ "–∂–∞–ª–æ–±–∞".</b>\n\n<i>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç:</i>\n' +
      '–ñ–∞–ª–æ–±–∞\n*–ö—Ä–∞—Ç–∫–∞—è —Å—É—Ç—å –∂–∞–ª–æ–±—ã* üßê\n' +
      '*–û–ø–∏—Å–∞–Ω–∏–µ —Å—É—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã, –≥–¥–µ –æ–Ω–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –∏ –ø—Ä–∏ –∫–∞–∫–∏—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞—Ö* ‚úçÔ∏è',
    {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [[{ text: '–ù–∞–∑–∞–¥', callback_data: '/start' }]]
      }
    }
  );
};
export const sendMessageOnSuggestion = async (chatId) => {
  await bot.sendMessage(
    chatId,
    '–û–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë –ø–æ–∂–µ–ª–∞–Ω–∏–µ ‚ò∫Ô∏è<b>\n–í–Ω–∏–º–∞–Ω–∏–µ: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–≤—ã–º —Å–ª–æ–≤–æ–º –≤–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ "–ø–æ–∂–µ–ª–∞–Ω–∏–µ"</b>\n\n<i>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–∫—Å—Ç–∞:</i>\n' +
      '–ü–æ–∂–µ–ª–∞–Ω–∏–µ\n*–ö—Ä–∞—Ç–∫–∞—è —Å—É—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è* ü§î\n' +
      '*–û–ø–∏—Å–∞–Ω–∏–µ –µ–≥–æ —Å—É—Ç–∏, –ø–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ –∏ –≥–¥–µ —Å—Ç–æ–∏—Ç —ç—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å* ‚úçÔ∏è',
    {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [[{ text: '–ù–∞–∑–∞–¥', callback_data: '/start' }]]
      }
    }
  );
};
export const sendMessageOnQuestion = async (chatId) => {
  await bot.sendMessage(chatId, '–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', {
    reply_markup: {
      inline_keyboard: [
        [{ text: '–ü–∞—Ä–∞–≥—Ä–∞—Ñ—ã', callback_data: '/textInfo' }],
        [{ text: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', callback_data: '/imageInfo' }],
        [{ text: '–ù–∞–∑–∞–¥', callback_data: '/start' }]
      ]
    }
  });
};
export const sendMessageOnTextInfo = async (chatId) => {
  await bot.sendMessage(
    chatId,
    '<b>–ü–∞—Ä–∞–≥—Ä–∞—Ñ</b>\n<i>–û–ø–∏—Å–∞–Ω–∏–µ: </i>' +
      '–ü–∞—Ä–∞–≥—Ä–∞—Ñ, –∑–∞–Ω–∏–º–∞—é—â–∏–π –≤—Å—é –∏–ª–∏ –ø–æ–ª–æ–≤–∏–Ω—É —à–∏—Ä–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ, –µ—Å–ª–∏ –í–∞–º –Ω—É–∂–µ–Ω —Ç–µ–∫—Å—Ç –∏–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å —Ç–µ–∫—Å—Ç–æ–º.\n' +
      '<i>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: </i>',
    {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [{ text: '–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: '/textSettingsGeneral' }],
          [{ text: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–∞', callback_data: '/textSettingsFont' }],
          [{ text: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª–æ–∂–µ–Ω–∏—è', callback_data: '/textSettingsPosition' }],
          [{ text: '–ù–∞–∑–∞–¥', callback_data: '/question' }]
        ]
      }
    }
  );
};
export const sendMessageOnTextSettingsGeneral = async (chatId) => {
  await bot.sendMessage(
    chatId,
    '<b>–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞</b>' +
      '\n- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–µ;' +
      '\n- –£–¥–∞–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞;',
    {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [[{ text: '–ù–∞–∑–∞–¥', callback_data: '/textInfo' }]]
      }
    }
  );
};
export const sendMessageOnTextSettingsFont = async (chatId) => {
  await bot.sendMessage(
    chatId,
    '<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–∞</b>' +
      '\n - –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞ (–æ–¥–∏–Ω –∏–∑ –ø—è—Ç–∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: "Very small", "Small", "Medium", "Large", "Extra large")',
    {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [[{ text: '–ù–∞–∑–∞–¥', callback_data: '/textInfo' }]]
      }
    }
  );
};
export const sendMessageOnTextSettingsPosition = async (chatId) => {
  await bot.sendMessage(
    chatId,
    '<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞</b>' +
      '\n- –ò–∑–º–µ–Ω–µ–Ω–∏–µ —à–∏—Ä–∏–Ω—ã –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ (–≤—Å—è —à–∏—Ä–∏–Ω–∞ —ç–∫—Ä–∞–Ω–∞ –∏–ª–∏ –ø–æ–ª–æ–≤–∏–Ω–∞);\n- –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ (—Å–ª–µ–≤–∞, –ø–æ —Ü–µ–Ω—Ç—Ä—É –∏–ª–∏ —Å–ø—Ä–∞–≤–∞);' +
      '\n- –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ (–≤–ª–µ–≤–æ, –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –ø–æ —Ü–µ–Ω—Ç—Ä—É, –Ω–æ –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ —à–∏—Ä–∏–Ω–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –≤—ã–±—Ä–∞–Ω–∞ –ø–æ–ª–æ–≤–∏–Ω—á–∞—Ç–æ–π' +
      ' –æ—Ç —à–∏—Ä–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞);\n- –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –≤ —Å–ø–∏—Å–∫–µ (–≤–≤–µ—Ä—Ö –∏–ª–∏ –≤–Ω–∏–∑, –Ω–æ –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—Å—Ç—å —á—Ç–æ-—Ç–æ –µ—â—ë).',
    {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [[{ text: '–ù–∞–∑–∞–¥', callback_data: '/textInfo' }]]
      }
    }
  );
};
export const sendMessageOnImageInfo = async (chatId) => {
  await bot.sendMessage(
    chatId,
    '<b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</b>\n<i>–û–ø–∏—Å–∞–Ω–∏–µ: </i>' +
      '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä–∞–≥—Ä–∞—Ñ, –∑–∞–Ω–∏–º–∞—é—â–∏–π –≤–º–µ—Å—Ç–µ —Å –Ω–∏–º –≤—Å—é —à–∏—Ä–∏–Ω—É —ç–∫—Ä–∞–Ω–∞ –∏–ª–∏ –ø–æ–ª–æ–≤–∏–Ω—É. ' +
      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ, –µ—Å–ª–∏ –í–∞–º –Ω—É–∂–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –≤–æ–∑–º–æ–∂–Ω–æ, —Å —Ç–µ–∫—Å—Ç–æ–º –∏/–∏–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º.\n' +
      '<i>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: </i>',
    {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [{ text: '–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: '/imageSettingsGeneral' }],
          [{ text: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–∞', callback_data: '/imageSettingsFont' }],
          [{ text: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª–æ–∂–µ–Ω–∏—è', callback_data: '/imageSettingsPosition' }],
          [{ text: '–ù–∞–∑–∞–¥', callback_data: '/question' }]
        ]
      }
    }
  );
};
export const sendMessageOnImageSettingsGeneral = async (chatId) => {
  await bot.sendMessage(
    chatId,
    '<b>–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>' +
      '\n- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–µ;\n- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏ –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–µ;' +
      '\n- –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–π (–æ–¥–∏–Ω –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: ' +
      'x0.25, x0.5, x0.75, x1, x1.25, x1.5, x1.75 –∏–ª–∏ x2, ' +
      '–ø—Ä–∏—á—ë–º –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–µ –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö, –ø–æ—Å–∫–æ–ª—å–∫—É —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω);' +
      '\n- –£–¥–∞–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞;',
    {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [[{ text: '–ù–∞–∑–∞–¥', callback_data: '/imageInfo' }]]
      }
    }
  );
};
export const sendMessageOnImageSettingsFont = async (chatId) => {
  await bot.sendMessage(
    chatId,
    '<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–∞</b>' +
      '\n - –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞ (–æ–¥–∏–Ω –∏–∑ –ø—è—Ç–∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: "Very small", "Small", "Medium", "Large", "Extra large")',
    {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [[{ text: '–ù–∞–∑–∞–¥', callback_data: '/imageInfo' }]]
      }
    }
  );
};
export const sendMessageOnImageSettingsPosition = async (chatId) => {
  await bot.sendMessage(
    chatId,
    '<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª–æ–∂–µ–Ω–∏—è –±–ª–æ–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º</b>' +
      '\n- –ò–∑–º–µ–Ω–µ–Ω–∏–µ —à–∏—Ä–∏–Ω—ã –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å) (–≤—Å—è —à–∏—Ä–∏–Ω–∞ —ç–∫—Ä–∞–Ω–∞ –∏–ª–∏ –ø–æ–ª–æ–≤–∏–Ω–∞);' +
      '\n- –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å) (—Å–ª–µ–≤–∞, –ø–æ —Ü–µ–Ω—Ç—Ä—É –∏–ª–∏ —Å–ø—Ä–∞–≤–∞);' +
      '\n- –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å) (—Å–ª–µ–≤–∞ –æ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ —Å–ø—Ä–∞–≤–∞);' +
      '\n- –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Å –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–º, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –∏ ' +
      '–µ–≥–æ —à–∏—Ä–∏–Ω–∞ –≤—ã–±—Ä–∞–Ω–∞ –ø–æ–ª–æ–≤–∏–Ω—á–∞—Ç–æ–π) (–≤–ª–µ–≤–æ, –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –ø–æ —Ü–µ–Ω—Ç—Ä—É);' +
      '\n- –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –≤ —Å–ø–∏—Å–∫–µ (–≤–≤–µ—Ä—Ö –∏–ª–∏ –≤–Ω–∏–∑, –Ω–æ –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—Å—Ç—å —á—Ç–æ-—Ç–æ –µ—â—ë).',
    {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [[{ text: '–ù–∞–∑–∞–¥', callback_data: '/imageInfo' }]]
      }
    }
  );
};
export const onComplaintResponse = async (chatId, complaint) => {
  try {
    const imagePath = path.join(
      path.resolve(),
      `/public/telegramBot/complaints/${complaint.split('').slice(0, 25).join('')}.txt`
    );
    fs.writeFileSync(imagePath, complaint);
    await validateMessage(
      complaint,
      '–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –ø—Ä–∏–Ω—è—Ç–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.',
      '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ.',
      chatId
    );
  } catch (e) {
    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞. –ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è.');
    console.error('error: ', e);
  } finally {
    await sendMessageOnStart(chatId);
  }
};
export const onSuggestionResponse = async (chatId, suggestion) => {
  await validateMessage(
    suggestion,
    '–í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.',
    '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ.',
    chatId
  );
  const imagePath = path.join(
    path.resolve(),
    `/public/telegramBot/suggestions/${suggestion.split('').slice(0, 25).join('')}.txt`
  );
  fs.writeFileSync(imagePath, suggestion);
  await sendMessageOnStart(chatId);
};
// export const sendMessageOn = async (chatId) => {
//   await bot.sendMessage(chatId, '–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', {
//     reply_markup: {
//       inline_keyboard: [
//         [{ text: '–ü–∞—Ä–∞–≥—Ä–∞—Ñ—ã', callback_data: '/textInfo' }],
//         [{ text: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', callback_data: '/imageInfo' }],
//         [{ text: '–ù–∞–∑–∞–¥', callback_data: '/start' }]
//       ]
//     }
//   });
// };
// export const sendMessageOn = async (chatId) => {
//   await bot.sendMessage(chatId, '–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', {
//     reply_markup: {
//       inline_keyboard: [
//         [{ text: '–ü–∞—Ä–∞–≥—Ä–∞—Ñ—ã', callback_data: '/textInfo' }],
//         [{ text: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', callback_data: '/imageInfo' }],
//         [{ text: '–ù–∞–∑–∞–¥', callback_data: '/start' }]
//       ]
//     }
//   });
// };
